// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
    // Top branch
    Mux16(a=a, b=b, sel=sel[0], out=mux);
    Not16(
        in[0]=sel[1],
        in[1]=sel[1],
        in[2]=sel[1],
        in[3]=sel[1],
        in[4]=sel[1],
        in[5]=sel[1],
        in[6]=sel[1],
        in[7]=sel[1],
        in[8]=sel[1],
        in[9]=sel[1],
        in[10]=sel[1],
        in[11]=sel[1],
        in[12]=sel[1],
        in[13]=sel[1],
        in[14]=sel[1],
        in[15]=sel[1],
        out=notsel1
    );
    And16(a=mux, b=notsel1, out=muxAndNotsel1);
    // Bottom branch
    Not16(
        in[0]=sel[0],
        in[1]=sel[0],
        in[2]=sel[0],
        in[3]=sel[0],
        in[4]=sel[0],
        in[5]=sel[0],
        in[6]=sel[0],
        in[7]=sel[0],
        in[8]=sel[0],
        in[9]=sel[0],
        in[10]=sel[0],
        in[11]=sel[0],
        in[12]=sel[0],
        in[13]=sel[0],
        in[14]=sel[0],
        in[15]=sel[0],
        out=notsel0
    );
    And16(a=c, b=notsel0, out=cAndNotsel0);
    And16(
        a[0]=sel[0],
        a[1]=sel[0],
        a[1]=sel[0],
        a[1]=sel[0],
        a[1]=sel[0],
        a[1]=sel[0],
        a[1]=sel[0],
        a[1]=sel[0],
        a[1]=sel[0],
        a[1]=sel[0],
        a[1]=sel[0],
        a[1]=sel[0],
        a[1]=sel[0],
        a[1]=sel[0],
        a[1]=sel[0],
        a[1]=sel[0],
    );
}